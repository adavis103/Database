/*
* Lexer Rules
*/

fragment A			: (‘A’ | ‘a’);
fragment B			: (‘B’ | ‘b’);
fragment C			: (‘C’ | ‘c’);
fragment D			: (‘D’ | ‘d’);
fragment E			: (‘E’ | ‘e’);
fragment F			: (‘F’ | ‘f’);
fragment G			: (‘G’ | ‘g’);
fragment H			: (‘H’ | ‘h’);
fragment I			: (‘I’ | ‘i’);
fragment J			: (‘J’ | ‘j’);
fragment K			: (‘K’ | ‘k’);
fragment L			: (‘L’ | ‘l’);
fragment M			: (‘M’ | ‘m’);
fragment N			: (‘N’ | ‘n’);
fragment O			: (‘O’ | ‘o’);
fragment P			: (‘P’ | ‘p’);
fragment Q			: (‘Q’ | ‘q’);
fragment R			: (‘R’ | ‘r’);
fragment S			: (‘S’ | ‘s’);
fragment T			: (‘T’ | ‘t’);
fragment U			: (‘U’ | ‘u’);
fragment V			: (‘V’ | ‘v’);
fragment W			: (‘W’ | ‘w’);
fragment X			: (‘X’ | ‘x’);
fragment Y			: (‘Y’ | ‘y’);
fragment Z			: (‘Z’ | ‘z’);
fragment _			: ‘_’;

fragment alpha		: (A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z | _);
fragment digit			: [0-9];

fragment identifier		: (alpha | digit)+;
fragment relation-name	: identifier;


fragment selection		: select condition atomic-expr
fragment expr			: (atomic-expr | selection | projection | renaming | union | difference | product | natural-join);
atomic-expr			: relation-name | expr

query				: relation-name<-expr;
